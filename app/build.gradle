apply plugin: 'com.android.application'

dependencies {
    compile project(':libraries:RootCommands')
}

android {
    compileSdkVersion 22
    buildToolsVersion "23.0.0"

    defaultConfig {
        versionCode 1
        versionName "0.0.1"
        minSdkVersion 9
        targetSdkVersion 22
    }

    buildTypes {
        release {
            // Enable proguard with default android settings (no obfuscation)
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        encoding = "UTF-8"

        // Use Java 1.7, requires minSdk 8
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

/**
 * Android Gradle Plugin does not support jni packaging.
 * This is a hack, should be removed in the future
 */
tasks.withType(com.android.build.gradle.tasks.PackageApplication) { pkgTask ->
    pkgTask.jniFolders = new HashSet<File>()
    pkgTask.jniFolders.add(new File(projectDir, 'libs'))
}

/**
 * Task to rename executables from hello_world to libhello_world_exec.so
 * If they look like libraries, they are packaged in the apk and deployed on the device in the lib folder!
 *
 * http://www.gradle.org/docs/current/userguide/working_with_files.html
 */
task renameExecutables(type: Copy) {
    from 'libs'
    into 'libs'
    include '**/*'
    exclude '**/*.so'
    exclude '**/*.jar'

    rename(/(.+)/, 'lib$1_exec.so')
}


assemble.dependsOn renameExecutables
